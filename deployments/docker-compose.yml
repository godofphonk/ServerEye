version: '3.8'

services:
  servereye-bot:
    build:
      context: ..
      dockerfile: deployments/Dockerfile.bot
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://servereye:${DB_PASSWORD}@postgres:5432/servereye
      - ENVIRONMENT=production
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    networks:
      - servereye-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - servereye-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=servereye
      - POSTGRES_USER=servereye
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - servereye-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U servereye -d servereye"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  servereye-network:
    driver: bridge
