version: '3.8'

services:
  servereye-bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://servereye:${DB_PASSWORD}@postgres:5432/servereye?sslmode=disable
      - ENVIRONMENT=production
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - servereye-network

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - servereye-network
    ports:
      - "6379:6379"  # Expose for agent connection
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=servereye
      - POSTGRES_USER=servereye
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - servereye-network
    ports:
      - "5432:5432"  # Expose for debugging
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U servereye -d servereye"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local

networks:
  servereye-network:
    driver: bridge
